{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/apps/dashboard/src/server/actions/auth.ts"],"sourcesContent":["'use server';\n\nimport { TOKEN_KEY } from '@/utils/constants';\nimport { verifyJwt } from '@repo/auth';\nimport { cookies } from 'next/headers';\n\nexport async function getToken() {\n  const cookieStore = await cookies();\n  return cookieStore.get(TOKEN_KEY)?.value;\n}\n\nexport async function setToken(token: string) {\n  const cookieStore = await cookies();\n  cookieStore.set(TOKEN_KEY, token);\n}\n\nexport async function authenticate(token: string | undefined) {\n  if (!token) {\n    return null;\n  }\n\n  try {\n    const payload = await verifyJwt(token);\n\n    return payload;\n  } catch (_) {\n    return null;\n  }\n}\n"],"names":[],"mappings":";;;;;;;IAMsB;IAKA;IAKA"}},
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/apps/dashboard/src/server/actions/locale.ts"],"sourcesContent":["'use server';\n\nimport { cookies } from 'next/headers';\n\nexport async function setLocale(locale: string) {\n  const cookieStore = await cookies();\n  cookieStore.set('locale', locale);\n}\n"],"names":[],"mappings":";;;;;IAIsB"}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/packages/hooks/src/use-notifications.ts"],"sourcesContent":["import { showNotification } from '@mantine/notifications';\nimport { useTranslations } from 'next-intl';\n\nexport function useNotifications() {\n  const t = useTranslations();\n\n  return {\n    success: (message: string) => {\n      showNotification({\n        color: 'green',\n        title: t('success'),\n        message,\n      });\n    },\n\n    info: (message: string) => {\n      showNotification({\n        color: 'blue',\n        title: t('done'),\n        message,\n      });\n    },\n\n    error: (message: string) => {\n      showNotification({\n        color: 'red',\n        title: t('error'),\n        message,\n      });\n    },\n  };\n}\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,SAAS;IACd,MAAM,IAAI,CAAA,GAAA,sVAAA,CAAA,kBAAe,AAAD;IAExB,OAAO;QACL,SAAS,CAAC;YACR,CAAA,GAAA,0XAAA,CAAA,mBAAgB,AAAD,EAAE;gBACf,OAAO;gBACP,OAAO,EAAE;gBACT;YACF;QACF;QAEA,MAAM,CAAC;YACL,CAAA,GAAA,0XAAA,CAAA,mBAAgB,AAAD,EAAE;gBACf,OAAO;gBACP,OAAO,EAAE;gBACT;YACF;QACF;QAEA,OAAO,CAAC;YACN,CAAA,GAAA,0XAAA,CAAA,mBAAgB,AAAD,EAAE;gBACf,OAAO;gBACP,OAAO,EAAE;gBACT;YACF;QACF;IACF;AACF"}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 74, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/packages/hooks/src/use-modals.tsx"],"sourcesContent":["import { Button, Group, type MantineColor, Stack, Text } from '@mantine/core';\nimport { modals } from '@mantine/modals';\nimport { useTranslations } from 'next-intl';\n\nexport function useModals() {\n  const t = useTranslations();\n\n  return {\n    confirm: ({\n      color = 'red',\n      onConfirm,\n    }: {\n      color?: MantineColor;\n      onConfirm: () => void;\n    }) => {\n      const modalId = 'confirm';\n\n      modals.open({\n        modalId,\n        centered: true,\n        withCloseButton: false,\n\n        overlayProps: {\n          blur: 5,\n          opacity: 1,\n        },\n\n        children: (\n          <Stack>\n            <div>\n              <Text span>{t('areYouSureAboutThisAction')} </Text>\n              <Text span bg=\"yellow.5\">\n                {t('actionCannotBeUndone')}\n              </Text>\n            </div>\n\n            <Group grow>\n              <Button variant=\"default\" onClick={() => modals.close(modalId)}>\n                {t('cancel')}\n              </Button>\n\n              <Button\n                color={color}\n                onClick={() => {\n                  onConfirm();\n                  modals.close(modalId);\n                }}\n              >\n                {t('confirm')}\n              </Button>\n            </Group>\n          </Stack>\n        ),\n      });\n    },\n  };\n}\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;AAAA;AAAA;AAAA;;;;;AAIO,SAAS;IACd,MAAM,IAAI,CAAA,GAAA,sVAAA,CAAA,kBAAe,AAAD;IAExB,OAAO;QACL,SAAS,CAAC,EACR,QAAQ,KAAK,EACb,SAAS,EAIV;YACC,MAAM,UAAU;YAEhB,yWAAA,CAAA,SAAM,CAAC,IAAI,CAAC;gBACV;gBACA,UAAU;gBACV,iBAAiB;gBAEjB,cAAc;oBACZ,MAAM;oBACN,SAAS;gBACX;gBAEA,wBACE,6WAAC,qZAAA,CAAA,QAAK;;sCACJ,6WAAC;;8CACC,6WAAC,mZAAA,CAAA,OAAI;oCAAC,IAAI;;wCAAE,EAAE;wCAA6B;;;;;;;8CAC3C,6WAAC,mZAAA,CAAA,OAAI;oCAAC,IAAI;oCAAC,IAAG;8CACX,EAAE;;;;;;;;;;;;sCAIP,6WAAC,qZAAA,CAAA,QAAK;4BAAC,IAAI;;8CACT,6WAAC,uZAAA,CAAA,SAAM;oCAAC,SAAQ;oCAAU,SAAS,IAAM,yWAAA,CAAA,SAAM,CAAC,KAAK,CAAC;8CACnD,EAAE;;;;;;8CAGL,6WAAC,uZAAA,CAAA,SAAM;oCACL,OAAO;oCACP,SAAS;wCACP;wCACA,yWAAA,CAAA,SAAM,CAAC,KAAK,CAAC;oCACf;8CAEC,EAAE;;;;;;;;;;;;;;;;;;YAKb;QACF;IACF;AACF"}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/apps/dashboard/src/components/shell/header.tsx"],"sourcesContent":["'use client';\n\nimport { setToken } from '@/server/actions/auth';\nimport { setLocale } from '@/server/actions/locale';\nimport {\n  ActionIcon,\n  Button,\n  Divider,\n  Group,\n  Menu,\n  MenuDropdown,\n  MenuItem,\n  MenuTarget,\n  Text,\n  useMantineColorScheme,\n} from '@mantine/core';\nimport { useHotkeys } from '@mantine/hooks';\nimport { useNotifications } from '@repo/hooks';\nimport {\n  IconBell,\n  IconLanguage,\n  IconLogout,\n  IconMessage,\n  IconMoon,\n  IconSun,\n  IconUser,\n} from '@tabler/icons-react';\nimport { useMutation } from '@tanstack/react-query';\nimport dayjs from 'dayjs';\nimport { useTranslations } from 'next-intl';\nimport { useRouter } from 'next/navigation';\nimport { useEffect, useState } from 'react';\n\nexport function Header() {\n  const router = useRouter();\n  const t = useTranslations();\n  const n = useNotifications();\n  const [datetime, setDatetime] = useState(new Date());\n  const { toggleColorScheme, colorScheme } = useMantineColorScheme();\n\n  useHotkeys([['mod+J', () => toggleColorScheme()]]);\n\n  useEffect(() => {\n    const interval = setInterval(() => setDatetime(new Date()), 1000);\n    return () => clearInterval(interval);\n  }, []);\n\n  const logoutMut = useMutation({\n    mutationFn: () => setToken(''),\n    onSuccess: () => {\n      router.push('/accounts/login');\n      n.success(t('logoutSuccess'));\n    },\n  });\n\n  return (\n    <Group mx=\"xl\" h=\"100%\" justify=\"space-between\">\n      <Text ff=\"Roboto\" fw={500}>\n        {dayjs(datetime).format('HH:mm A')}\n      </Text>\n\n      <Group gap=\"sm\">\n        <ActionIcon size=\"lg\" variant=\"natural\">\n          <IconMessage />\n        </ActionIcon>\n\n        <ActionIcon size=\"lg\" variant=\"natural\">\n          <IconBell />\n        </ActionIcon>\n\n        <Divider orientation=\"vertical\" />\n\n        <Menu>\n          <MenuTarget>\n            <ActionIcon size=\"lg\" variant=\"natural\">\n              <IconUser />\n            </ActionIcon>\n          </MenuTarget>\n\n          <MenuDropdown miw={160}>\n            <MenuItem\n              color=\"red\"\n              leftSection={<IconLogout size={18} />}\n              onClick={() => logoutMut.mutate()}\n            >\n              {t('logout')}\n            </MenuItem>\n          </MenuDropdown>\n        </Menu>\n\n        <Divider orientation=\"vertical\" />\n\n        <ActionIcon size=\"lg\" variant=\"natural\" onClick={toggleColorScheme}>\n          {colorScheme === 'light' ? <IconMoon /> : <IconSun />}\n        </ActionIcon>\n\n        <Divider orientation=\"vertical\" />\n\n        <Menu>\n          <MenuTarget>\n            <Button miw={72} size=\"compact-sm\" radius=\"100vw\">\n              <IconLanguage size={18} />\n            </Button>\n          </MenuTarget>\n\n          <MenuDropdown>\n            <MenuItem leftSection=\"En\" onClick={() => setLocale('en')}>\n              English\n            </MenuItem>\n\n            <MenuItem leftSection=\"Ar\" onClick={() => setLocale('ar')}>\n              العربية\n            </MenuItem>\n          </MenuDropdown>\n        </Menu>\n      </Group>\n    </Group>\n  );\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 464, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/apps/dashboard/src/components/shell/shell-link.tsx"],"sourcesContent":["'use client';\n\nimport { NavLink } from '@mantine/core';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nexport function ShellLink({\n  label,\n  icon,\n  section,\n  toggle,\n  activeExact = false,\n}: {\n  label: string;\n  section: string;\n  icon: React.ReactNode;\n  toggle?: () => void;\n  activeExact?: boolean;\n}) {\n  const pathname = usePathname();\n\n  return (\n    <NavLink\n      py={4}\n      px={6}\n      label={label}\n      href={section}\n      component={Link}\n      onClick={toggle}\n      variant=\"nav-link\"\n      leftSection={icon}\n      active={activeExact ? pathname === section : pathname.startsWith(section)}\n      style={{ borderRadius: 'var(--mantine-radius-sm)' }}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAFA;AAFA;;;;;AAMO,SAAS,UAAU,EACxB,KAAK,EACL,IAAI,EACJ,OAAO,EACP,MAAM,EACN,cAAc,KAAK,EAOpB;IACC,MAAM,WAAW,CAAA,GAAA,iQAAA,CAAA,cAAW,AAAD;IAE3B,qBACE,6WAAC,yZAAA,CAAA,UAAO;QACN,IAAI;QACJ,IAAI;QACJ,OAAO;QACP,MAAM;QACN,WAAW,2RAAA,CAAA,UAAI;QACf,SAAS;QACT,SAAQ;QACR,aAAa;QACb,QAAQ,cAAc,aAAa,UAAU,SAAS,UAAU,CAAC;QACjE,OAAO;YAAE,cAAc;QAA2B;;;;;;AAGxD"}},
    {"offset": {"line": 503, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 509, "column": 0}, "map": {"version":3,"sources":["file:///home/hussain7abbas/projects/turbo-starter/apps/dashboard/apps/dashboard/src/components/shell/navbar.tsx"],"sourcesContent":["'use client';\nimport { Stack } from '@mantine/core';\nimport { IconHome } from '@tabler/icons-react';\nimport { useTranslations } from 'next-intl';\nimport { ShellLink } from './shell-link';\n\nexport function Navbar() {\n  const t = useTranslations();\n\n  return (\n    <Stack gap={4} p=\"xs\" h=\"100%\">\n      <ShellLink\n        section=\"/\"\n        activeExact\n        label={t('home')}\n        icon={<IconHome size={18} />}\n      />\n    </Stack>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AADA;AAFA;AACA;AAFA;;;;;;AAMO,SAAS;IACd,MAAM,IAAI,CAAA,GAAA,sVAAA,CAAA,kBAAe,AAAD;IAExB,qBACE,6WAAC,qZAAA,CAAA,QAAK;QAAC,KAAK;QAAG,GAAE;QAAK,GAAE;kBACtB,cAAA,6WAAC,iKAAA,CAAA,YAAS;YACR,SAAQ;YACR,WAAW;YACX,OAAO,EAAE;YACT,oBAAM,6WAAC,oTAAA,CAAA,WAAQ;gBAAC,MAAM;;;;;;;;;;;;;;;;AAI9B"}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}